.question-show
  .question
    .card.frow.header
      %h4.title
        =@question.title
      .time.grey
        =local_relative_time(@question.created_at, type: 'time-or-date')

    .card.frow.main
      .profile-pic.medium
        =link_to(image_tag("avatar-50.png"), user_path(@question.user))
      .fcol
        .frow.body.bottom-space
          .markdown-output><
            :preserve
              #{@question.body}
        .frow.bottom-space
          .tags
            -tag = @question.tags.first
            =link_to("#{tag.university}", show_with_university_tag_path(tag.university), class: "btn btn-xs btn-info")
            =link_to("#{tag.name}", show_with_tag_path(tag.id, tag.name.gsub(" ", "-")), class: "btn btn-xs btn-info")
        .frow
          .likeable-owner
            -if owner @question
              =link_to("Edit", edit_question_path(@question))
              =link_to("Delete", question_path(@question), method: :delete)
            -else
              %span.grey asked by:
              =link_to(" " + @question.user.username, user_path(@question.user))
              %i.fa.fa-trophy.fa-lg
              ="+" + @question.user.score.to_s
          .votes
            =render 'likes/like', likeable: @question, path: question_likes_path(@question, Like.new)

  .frow
    .profile-pic.medium.standalone.new
      =image_tag("avatar-50.png")
    .new-answer
      =render 'answers/form', resources: [@answer]